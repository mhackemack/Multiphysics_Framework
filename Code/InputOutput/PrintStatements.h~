//======================================================================================================================
/*!
 * \class PrintStatements
 * \brief
 *
 * Routine to print out different headers.
 */
//======================================================================================================================

#ifndef PRINT_STATEMENTS_H
#define PRINT_STATEMENTS_H

#include "../Global/GlobalHeaders.h"
#include "PrintTools.h"


// Print the Program Header
void print_heading() {
    
    // Local variables
    std::string mon;
    unsigned int day, year;
    struct tm *current;
    time_t now;
    
    // Get Date and Time
    time(&now);
    current = localtime(&now);
    
    mon = get_month(current->tm_mon);
    day = current->tm_mday;
    year = current->tm_year%100+2000;
    
    std::cout
    << "******************************************************************************************\n"
    << "******************************************************************************************\n"
    << "*                                                                                        *\n"
    << "*        QQQQQQQQQ        SSSSSSSSSSSSSSS FFFFFFFFFFFFFFFFFFFFFFEEEEEEEEEEEEEEEEEEEEEE   *\n"
    << "*      QQ:::::::::QQ    SS:::::::::::::::SF::::::::::::::::::::FE::::::::::::::::::::E   *\n"
    << "*    QQ:::::::::::::QQ S:::::SSSSSS::::::SF::::::::::::::::::::FE::::::::::::::::::::E   *\n"
    << "*   Q:::::::QQQ:::::::QS:::::S     SSSSSSSFF::::::FFFFFFFFF::::FEE::::::EEEEEEEEE::::E   *\n"
    << "*   Q::::::O   Q::::::QS:::::S              F:::::F       FFFFFF  E:::::E       EEEEEE   *\n"
    << "*   Q:::::O     Q:::::QS:::::S              F:::::F               E:::::E                *\n"
    << "*   Q:::::O     Q:::::Q S::::SSSS           F::::::FFFFFFFFFF     E::::::EEEEEEEEEE      *\n"
    << "*   Q:::::O     Q:::::Q  SS::::::SSSSS      F:::::::::::::::F     E:::::::::::::::E      *\n"
    << "*   Q:::::O     Q:::::Q    SSS::::::::SS    F:::::::::::::::F     E:::::::::::::::E      *\n"
    << "*   Q:::::O     Q:::::Q       SSSSSS::::S   F::::::FFFFFFFFFF     E::::::EEEEEEEEEE      *\n"
    << "*   Q:::::O  QQQQ:::::Q            S:::::S  F:::::F               E:::::E                *\n"
    << "*   Q::::::O Q::::::::Q            S:::::S  F:::::F               E:::::E       EEEEEE   *\n"
    << "*   Q:::::::QQ::::::::QSSSSSSS     S:::::SFF:::::::FF           EE::::::EEEEEEEE:::::E   *\n"
    << "*    QQ::::::::::::::Q S::::::SSSSSS:::::SF::::::::FF           E::::::::::::::::::::E   *\n"
    << "*      QQ:::::::::::Q  S:::::::::::::::SS F::::::::FF           E::::::::::::::::::::E   *\n"
    << "*        QQQQQQQQ::::QQ SSSSSSSSSSSSSSS   FFFFFFFFFFF           EEEEEEEEEEEEEEEEEEEEEE   *\n"
    << "*                Q:::::Q                                                                 *\n"
    << "*                 QQQQQQ                                                                 *\n"
    << "*                                                                                        *\n"
    << "******************************************************************************************\n"
    << "******************************************************************************************\n"
    << "*                                                                                        *\n"
    << "*         This code was created for the express use of author Michael Hackemack          *\n"
    << "*         and any and all reproduction, alteration or utilization of this source         *\n"
    << "*         with the express use of redistribution in a commercial code without            *\n"
    << "*         prior approval of the author is in violation of human decency.                 *\n"
    << "*                                                                                        *\n"
    << "*         (c) 2013 - Michael W. Hackemack                                                *\n"
    << "*                                                                                        *\n"
    << "******************************************************************************************\n"
    << "                                                                                          \n"
    << "          Current Run Date:   " << mon << " " << day << ", " << year <<"\n"
    << "          Current Run Time:   " << current->tm_hour << " : " << current->tm_min << " : " << current->tm_sec  <<"\n"
    << "                                                                                          \n"
    << "******************************************************************************************\n";

return;
}

//======================================================================================================================
// Print Eigenvalue Header Script
void print_eigenvalue_header ()
{
    std::cout
    << "******************************************************************************************\n"
    << "*                                                                                        *\n"
    << "*                                Eigenvalue Calculation                                  *\n"
    << "*                                                                                        *\n"
    << "******************************************************************************************\n"
    << "                                                                                          \n";

    return;
}

//======================================================================================================================
// Print Eigenvalue Header Script
void print_TH_ss_header ()
{
    std::cout
    << "******************************************************************************************\n"
    << "*                                                                                        *\n"
    << "*                              Steady-State TH Calculation                               *\n"
    << "*                                                                                        *\n"
    << "******************************************************************************************\n"
    << "                                                                                          \n";

    return;
}

//======================================================================================================================
// Print Neutronics Adjoint Script
void print_neutronics_adjoint_header ()
{
    
    std::cout
    << "******************************************************************************************\n"
    << "*                                                                                        *\n"
    << "*                             Neutronics Adjoint Calculation                             *\n"
    << "*                                                                                        *\n"
    << "******************************************************************************************\n"
    << "                                                                                          \n";

    return;
    
}

//======================================================================================================================
// Print Neutronics Time Step Script
void print_neutronics_time_step_header ()
{
    
    std::cout
    << "******************************************************************************************\n"
    << "*                                                                                        *\n"
    << "*                                 Neutronics Time Step                                   *\n"
    << "*                                                                                        *\n"
    << "******************************************************************************************\n"
    << "                                                                                          \n";

    return;
    
}

//======================================================================================================================
// Print Neutronics Time Step Script
void print_TH_time_step_header ()
{
    
    std::cout
    << "******************************************************************************************\n"
    << "*                                                                                        *\n"
    << "*                                     TH Time Step                                       *\n"
    << "*                                                                                        *\n"
    << "******************************************************************************************\n"
    << "                                                                                          \n";

    return;
    
}

//======================================================================================================================
// Print Synch Point Script
void print_synch_point_header (const unsigned int in_, const double t)
{
    
    std::ostringstream strs; strs << t;
    
    std::cout
    << "******************************************************************************************\n"
    << "*                                                                                        *\n"
    << "*                                Next Synch Point Reached                                *\n"
    << "*                                                                                        *\n"
    << "******************************************************************************************\n"
    << "                                                                                          \n"
    << "          New Synch Point:   " << Utilities::int_to_string(in_, Utilities::needed_digits(in_)) <<"\n"
    << "          Simulation Time:   " << strs.str () <<"\n"
    << "                                                                                          \n"
    << "******************************************************************************************\n"
    << "                                                                                          \n";

    return;
    
}

//======================================================================================================================
// Print the Program Closing Script
void print_closing (const double dt)
{
    std::ostringstream strs; strs << dt;
    
    std::cout
    << "******************************************************************************************\n"
    << "*                                                                                        *\n"
    << "*                                   End of Simulation                                    *\n"
    << "*                                                                                        *\n"
    << "******************************************************************************************\n"
    << "                                                                                          \n"
    << "          Total Clock Time:   " << strs.str () <<"\n"
    << "                                                                                          \n"
    << "******************************************************************************************\n";

    return;
}

//======================================================================================================================
// Print Beginning Input Script
void print_input_in_header ()
{
    
    std::cout
    << "******************************************************************************************\n"
    << "*                                                                                        *\n"
    << "*                               Reading All Input Files                                  *\n"
    << "*                                                                                        *\n"
    << "******************************************************************************************\n"
    << "                                                                                          \n";

    return;
    
}

//======================================================================================================================
// Print End Input Script
void print_input_in_header (double dt)
{
    std::ostringstream strs; strs << dt;
    
    std::cout
    << "******************************************************************************************\n"
    << "*                                                                                        *\n"
    << "*                            Finished Reading All Input Files                            *\n"
    << "*                                                                                        *\n"
    << "******************************************************************************************\n"
    << "                                                                                          \n"
    << "          Elapsed Time:   " << strs.str () <<"\n"
    << "                                                                                          \n"
    << "******************************************************************************************\n";

    return;
    
}


//======================================================================================================================
#endif
